#!/bin/zsh

# Abort on any error, to make sure we don't silently generate a 
# broken plugin
set -e

# Make sure we're running from the root of the project directory
THIS_DIR=${0:h:A}
PROJECT_ROOT=${THIS_DIR:h}
cd $PROJECT_ROOT

# Generate a full Oh My Zsh plugin directory structure
PLUGIN_DIR="build/zshnavigationtools"
PLUGIN_FILE="$PLUGIN_DIR/zshnavigationtools.plugin.zsh"
if [[ -e $PLUGIN_DIR ]]; then
    rm -rf $PLUGIN_DIR
fi
mkdir -p $PLUGIN_DIR

# Create main plugin file

# Plugin-specific header
ZNT_COMMIT_ID=$(git show-ref master | head -1)
echo "Generating $PLUGIN_FILE"
cat >>$PLUGIN_FILE <<END
# Zsh Navigation Tools
#
# https://github.com/psprint/zsh-navigation-tools"
#
# License is GPLv3
#
# This plugin is auto-generated from the upstream ZNT project.
# ZNT version: $ZNT_COMMIT_ID
#
# Do not make modifications directly to this plugin. Submit changes to
# the upstream project, and then re-generate the plugin from upstream.

END

fcns=( n-*(on) znt-*(on) )
for fcn ( $fcns ); do
    echo "autoload $fcn" >>$PLUGIN_FILE
    if [[ $fcn[1] == "n" ]]; then
        echo "alias n${fcn#n-}=$fcn" >>$PLUGIN_FILE
    fi
    # Strip the preamble discussing installation
    cat $fcn | sed '1,3d' > $PLUGIN_DIR/$fcn
done

# Create a plugin-specific README

PLUGIN_README="$PLUGIN_DIR/README.md"
cat doc/README-plugin-before.md >>$PLUGIN_README
starting_line=$(grep -n "## Introduction" README.md | cut -d: -f1)
(( starting_line = starting_line - 1 ))
sed -n "$starting_line,\$p" README.md >>$PLUGIN_README
cat doc/README-plugin-after.md >>$PLUGIN_README

# Other documentation

cp LICENSE "$PLUGIN_DIR/LICENSE.txt"

# Grab the example config files
mkdir -p $PLUGIN_DIR/config
cp -a .config/znt $PLUGIN_DIR/config

echo "Generated plugin at $PLUGIN_DIR"

